<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
 xmlns="http://www.w3.org/1999/xhtml"
 xmlns:epub="http://www.idpf.org/2007/ops"
 xml:lang="ja"
 class="hltr"
>
<head>
<meta charset="UTF-8"/>
<title>第67章 理系・文系</title>
<link rel="stylesheet" type="text/css" href="../../style/book-style.css"/>
</head>
<body epub:type="bodymatter">
<!-- Navigation -->
<h1>Matz Essays Volume 2</h1>
<p class="navigation-top"><a href="../../index.xhtml">HOME</a>　&gt;　<a href="../index.xhtml">Volume 2</a>　&gt;　第67章</p>
<!-- Body -->
<section id="chap67" class="level1">
<a id="page_283"/>
<span class="chap-title">Matz Essay</span><span class="chap-num">67</span>
<hr class="chap-hr" />
<h2>
<span class="fontsmall">まつもと ゆきひろのハッカーズライフ</span><br />
理系・文系
</h2>
<hr class="chap-hr" />
<p class="right">[<span class="it">オープンソースマガジン</span>, 2006年11月号]</p>
<div class="newlead">
<p class="in">理系と文系の区別について。意味がないなとずっと思っているのですが、20年経っても衰退する気配はないですね。人間はわかりやすい二分論が大好きで、固執するということなんでしょうか。ただ、プログラミングの重要な一部としてユーザーの気持ちを考えること、要求されているものを明確化し言語化するなどの工程があり、それに求められる特質は世間一般に言う「文系的能力」なのは間違いないと思うのですが、あまり理解が進まないですね。やはり「プログラミングは理系のもの」とイメージはいくら時間が経っても強固なものなんですかね。</p>
</div>
<section id="chap6701" class="level2">
<h3>2種類の人間</h3>
<hr class="hr-gray" />
<p class="ih">「世の中には2種類の人間がいる」というのは、よく使われるフレーズです。私の一番のお気に入りは「世の中には2種類の人間がいる。人間を2種類に分類したがる人間と、そうでない人間だ」です。実際、人類の分類癖は相当なもので、科学の発展の歴史は分類の歴史といってもよいでしょう。私の愛するオブジェクト指向も、その根源にはクラスによる分類が関係していそうです。</p>
<p class="in">学生の頃の典型的な分類は、理系・文系というものです。私が高校生の頃は、「工学部や理学部、医学部などに進学したい人は理系、それ以外は文系」というような分け方でした。また、理系では数学や物理、化学などの「理系科目」が重視され、文系では国語、英語、社会などの「文系科目」が重視されていたように思います。高校を卒業してからずいぶん経つのですが、今でも似たような分類をしているのではないでしょうか。</p>
<p class="in">しかし、高校時代の私は、この分類があまり好きではありませんでした。高校生になる前からコンピュータ好きで、将来はプログラミングの分野に進もうと考えていた私は、当然のように理系に進みました。ソフトウェア関係の大学の学科はたいてい工学部とか理学部などに所属していましたし、その目的のためには理系に進むのが当然の選択のはずでした。</p>
<a id="page_284"/>
<p class="in">ただ1つ、想定外だったのは、興味の方向と裏腹に私の得意科目が（得意な順に）国語、英語、社会であり、苦手なのは（マシな順に）化学、物理、数学だったことです。理科や数学が嫌いというわけではないのですが、どうにも計算が苦手で、よい成績を取れませんでした。特に数学は、母校（いちおう進学校でした）の理系百数十人中、ダントツで最下位<a href="#fn1" class="footnote-ref" id="fnref1" epub:type="noteref" role="doc-noteref">1</a> ということもあったほどです。自分の望む進路のためには一番苦手な科目を克服しなければならず、相当つらい思いをしたこともたびたびでした。</p>
<p class="in">そんな私ですが、共通一次試験<a href="#fn2" class="footnote-ref" id="fnref2" epub:type="noteref" role="doc-noteref">2</a> の数学以外の科目と、二次試験の英語に頼って何とか大学に潜り込みました。しかし、大学に入ってからも数学には苦労させられます。理系学科の学生は、（私のような一部の例外を除くと）かなり数学のデキがよいのです。周りの学生が当然のように理解していることがさっぱりわからず、単位取得に苦労<a href="#fn3" class="footnote-ref" id="fnref3" epub:type="noteref" role="doc-noteref">3</a> しました。</p>
<p class="in">進路指導上の便宜的な分類のはずの「理系・文系」ですが、その影響は卒業して社会に出てからも続きます。たとえば、理系学科を卒業した人よりも文系学科を卒業した人のほうが、生涯収入が高いそうです。これも学歴社会の影響でしょうか。また、「理系的性格の人はこういう行動をする」という性格分析も盛んです。</p>
</section>
<section id="chap6702" class="level2">
<h3>理系的人格</h3>
<hr class="hr-gray" />
<p class="in">ところで、理系的人格って何でしょう。典型的には「工学部や理学部の出身<a href="#fn4" class="footnote-ref" id="fnref4" epub:type="noteref" role="doc-noteref">4</a>」「数学や理科などが得意」「ものづくりが好き」などと形容されるようです。他にも「ブランドなど形のないものを受け入れない」「何でも修理・分解したがる」「人間関係が上手でない」「理屈っぽい」「知識が深い」「のめり込みやすい」などがあげられます。</p>
<p class="in">たしかに、この業界には、そういう条件に当てはまる人が多そうです。とはいえ、そういう人ばかりかというとそうでもないですし、「そういう人が、本当にプログラミングに向いているのか?」と問われると、実は少々疑問があるのです。</p>
</section>
<section id="chap6703" class="level2">
<h3>プログラミングと理系・文系</h3>
<hr class="hr-gray" />
<p class="in">そもそもコンピュータは、理系的分野から誕生した技術です。初期の計算機は歯車で構成されていましたから機械工学の産物ですし、電子化された最近のコンピュータは電気工学、電子工学などで作り上げられています。また、計算機の基礎となる理論は、数学によって構成されています。ブール代数やラムダ計算<a href="#fn5" class="footnote-ref" id="fnref5" epub:type="noteref" role="doc-noteref">5</a> など、名前を聞いたことがあるのではないでしょうか。</p>
<a id="page_285"/>
<p class="in">そのような「理系の塊」と言ってもよいコンピュータですが、本当に理系的人格だけが必要なのでしょうか?　考えてみると、コンピュータとその背景の原理は理系的ですが、ソフトウェアの開発は必ずしも理系的ではありません。ソフトウェア開発の手順を見てみると、多くの場合、ソフトウェアが解決すべき問題を把握し、その問題を解決するような仕組みとしてソフトウェアがデザインされます。そこで最も重要なのは、「人間が関わる組織の作業をコンピュータによっていかに自動化するか」という視点です。扱うのは人間と人間の関わりであり、あえて分類するなら文系的な活動です。さらにソフトウェア開発には、仕様書や設計書といった文書がつきものです。文書作成も本質的には文系的活動ですよね。</p>
<p class="in">オープンソースソフトウェアでも事情はさほど変わりません。オープンソースソフトウェア開発で最も重要なのは仕様の策定やコミュニティ運営だと思いますが、仕様の策定は先ほど述べたように文系的活動ですし、コミュニティ運営に求められる人々のコミュニケーションを円滑に行うことも文系的活動以外のなにものでもないでしょう。</p>
<p class="in">私は言語設計者として、人々が使いやすいプログラミング言語はどうあるべきかについて日々考えていますが、「人間がプログラミング言語を使っていてどう感じるかについて考えること」も、これまた文系的です。「人間工学に近い分野であり、理系ではないか」と言ってくださる方もいますが、Rubyのデザインは決して工学的アプローチにのっとっておらず、お世辞にも理系的ではありません。</p>
<p class="in">要するに、一般の人には理系バリバリと思われているプログラマーの活動は、実はその大半を文系的活動が占めているわけです。私のような理系的頭脳に欠陥がある人間でもやっていける理由は、この辺にあるのです。</p>
<p class="in">ただ、プログラミングが理系的人格と無縁かというと、そうでもありません。あまり頻繁ではありませんが、何らかの数学的知識が必要な領域のプログラムは存在しますし、また理系的発想が問題を解決してくれる局面もあります。つまり、プログラミングにはいろいろな才能が発揮されるさまざまな領域が含まれるということなのでしょう。</p>
</section>
<section id="chap6704" class="level2">
<h3>プログラマーへの向き・不向き</h3>
<hr class="hr-gray" />
<p class="in">プログラマーが文系的活動を多く含むのであれば、いわゆる文系人間を捕まえてきてプログラマーに仕立てれば良いのでしょうか?　そのようなことは、実際に行われています。たとえば、私が最初に就職したソフトハウス<a href="#fn6" class="footnote-ref" id="fnref6" epub:type="noteref" role="doc-noteref">6</a> では、同期入社が数百人もいて、その多くがプログラミング経験のない文系学生でした。「やっぱり向いていない」と短期間で辞めていく人もそれなりにいましたが、どちらかといえばプログラマーとして適応していく人のほうが多いようでした。プログラマーとしての適性は、世間でいう文系・理系とは違う軸に分布しているようです。そういえば、大学時代の同期にも「やっと卒業した。もう二度とコンピュータは触らない」と高らかに宣言した人がいましたね。</p>
<p class="in">このようなことを考慮すると、実際にプログラマーに向いているのは、</p>
<ul>
<li><p>論理的に考えられる</p></li>
<li><a id="page_286"/><p>コンピュータの都合に合わせられる</p></li>
<li><p>忍耐強い、またはコンピュータが好き</p></li>
</ul>
<p class="ni">という人ではないかと思います。世の中にはコンピュータが動作するロジックを頭の中で描けない人が一定数いますが、そういう人はやっぱりプログラマーには向いていない気がします。</p>
</section>
<section id="chap6705" class="level2">
<h3>文系的理系プログラマーの勧め</h3>
<hr class="hr-gray" />
<p class="in">このように、プログラマーの活動には思った以上に文系的要素が含まれています。文系・理系と区別するばかりでなく、調整能力に優れた文系的特質と、技術力に優れた理系的特質の両方を組み合わせてこそ、最高のプログラミングを達成できるのではないでしょうか。</p>
<p class="in">理系的なプログラマーの皆さん、文系的能力を伸ばすことにも関心を持ちましょう。文系的人間の皆さん<a href="#fn7" class="footnote-ref" id="fnref7" epub:type="noteref" role="doc-noteref">7</a>、実はプログラマー適性の持ち主かもしれませんよ。そういうことを気付かせてくれたという点でも、私の理系的学力のなさも捨てたものではなかったかもしれません。ありがたいことです。</p>
</section>
</section>
<section id="footnotes" class="footnotes footnotes-end-of-document" epub:type="footnotes">
<hr />
<ol>
<li epub:type="footnote" id="fn1">
<p><span class="k">ダントツで最下位</span></p>
<p>正直、ここまで低いと自分の脳を信頼できなくなりますね。
<a href="#fnref1" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn2">
<p><span class="k">共通一次試験</span></p>
<p>正式名称「共通第1次学力試験」。現在の大学入試センター試験に相当するテスト。年が知れる。
<a href="#fnref2" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn3">
<p><span class="k">単位取得に苦労</span></p>
<p>しかも、情報系って数学が必須科目なのである。
<a href="#fnref3" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn4">
<p><span class="k">工学部や理学部の出身</span></p>
<p>「それ人格じゃないじゃん」という批判は甘んじて受けよう。
<a href="#fnref4" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn5">
<p><span class="k">ブール代数やラムダ計算</span></p>
<p>ブール代数はジョージ・ブールが考案した0と1からなる2値論理を扱う代数系、ラムダ計算はアロンゾ・チャーチによって考案された関数の定義と実行を抽象化した計算体系。
<a href="#fnref5" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn6">
<p><span class="k">私が最初に就職したソフトハウス</span></p>
<p>当時の経営者がそこまで考えて学生を採用していたかどうかはわかりませんが……。
<a href="#fnref6" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn7">
<p><span class="k">文系的人間の皆さん</span></p>
<p>本当の文系的人間は『オープンソースマガジン』は読まないような気もするが。
<a href="#fnref7" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
</ol>
</section>
<!-- Navigation -->
<br /><br />
<hr />
<p class="navigation-right"><a href="p-055.xhtml">&lt;&lt; 前ページ</a>　<a href="p-057.xhtml">次ページ &gt;&gt;</a></p>
</body>
</html>
