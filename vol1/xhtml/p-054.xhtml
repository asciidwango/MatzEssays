<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
 xmlns="http://www.w3.org/1999/xhtml"
 xmlns:epub="http://www.idpf.org/2007/ops"
 xml:lang="ja"
 class="hltr"
>
<head>
<meta charset="UTF-8"/>
<title>第24章 データの保存</title>
<link rel="stylesheet" type="text/css" href="../../style/book-style.css"/>
</head>
<body epub:type="bodymatter">
<!-- Navigation -->
<h1>Matz Essays Volume 1</h1>
<p class="navigation-top"><a href="../../index.xhtml">HOME</a>　&gt;　<a href="../index.xhtml">Volume 1</a>　&gt;　<a href="p-053.xhtml">第24章</a>　&gt;　Ruby開発日記</p>
<!-- Body -->
<section id="chap2406" class="level2">
<a id="page_341"/>
<h3>◆ Ruby開発日記 ◆ プログラマーと数学</h3>
<hr class="hr-green" />
<p class="in">プログラミング好きと数学好きの間には何らかの関連があると思われます。プログラミングの基礎を作った人々は、古くはバベッジやブルバキ、やや新しいとチューリングやフォン・ノイマンなど多くは数学者です。数学者の名前を取ったプログラミング言語もたくさんあります（HaskellやTuringなど。PascalやOccamは数学者ではないのかな）。</p>
<p class="in">また、私の周りを見渡しても、私の最初の本『オブジェクト指向スクリプト言語Ruby』の共著者である石塚圭樹さんは数学科の出身ですし、『Rubyプログラミング入門』を書いた原信一郎さんは長岡科学技術大学の数学の先生です。</p>
<p class="in">また、私の同僚で<code>mod_ruby</code>や<code>eruby</code>の開発者、前田修吾さんは数学科から哲学科に転学したというちょっと変わった経歴を持っています。</p>
<p class="in">Ruby関連でも数学好きは活躍していまして、数学の話題を主に取り扱う（というか、一般の話題から分離する）ためにruby-mathという専用のメーリングリストが用意されています。</p>
<p class="in">これはいったいなぜなんでしょう?</p>
<p class="in">プログラミングは論理をベースにしていて、論理学は数学の一部であること、また数値を扱うプログラムが多いこと、また数学者がプログラミングの歴史で果たしてきた役割が大きいことなども考えられますが、数学のきっちり答えが出る厳密さと、あいまい性を排除する（したがる）プログラミングに共通点があるからかもしれません。</p>
<p class="in">とはいえ、プログラミングに数学が必須かというとそういうわけでもありません。大学でも機械工学、電子工学などでは研究においても数学は必須ですが、情報工学では（もちろん数学は必須科目ですが）、数学を使わなくてもできる研究はいくらでもあります。</p>
<p class="in">私自身も数学は大変苦手です。小学生の頃は算数が苦手という意識はなかったのですが、中学校に入り、数学という科目名になったあたりからもう駄目でした。この数学苦手の傾向は年を経るに従ってだんだん強まって、高校ではすべての教科の中で数学の成績が飛び抜けて悪いという悲惨な状況でした。苦手というよりも、脳の中で数学を扱う部分が壊れているんじゃないだろうかと、自分でも疑うほどでした。</p>
<p class="in">大学入試のときも当時の共通一次テストで、他のすべての科目の失点の合計よりも数学の失点のほうが多いという大失態を演じましたし、二次試験でも苦戦して数学のおかげであやうく大学生になれないところでした。大学に入ってからも必須の数学（線形代数とか）が理解できず、留年ぎりぎりで教授に泣きついたことを覚えています。</p>
<p class="in">どうして自分はこんなに数学が駄目なんだろうと考えたことがあります。どうやら、私が数学が駄目な理由にはいくつかあるようで、まず第一に、私は数学の試験にはつきものの「一定の時間内に正しい計算結果を出す」ことが大変苦手のようです。学生時代、数学の教科書を読むのはそんなに嫌いじゃありませんでしたし、理解できる部分もありました。しかし、試験のときにはいつもいろいろ試行錯誤して時間切れというのが落ちでした。素早くルールを適用して正しく計算というのがどうも駄目みたいです。定理の詳細が思い出せず、試験中に図を書いて定理を「再発見」しようとするようでは時間がいくらあっても足りません。実際、今でもプログラミングに当たって動かしてみて確かめて初めて理解するというケースが多いように思います。</p>
<a id="page_342"/>
<p class="in">2番目に、数学（が提供する考え方、モデル）が何の役に立つのかわからず、興味が持てなかったということがあります。理科とかは単なる知識（光の速度は秒速30万キロで、月まで1秒以下で届くんだよ、とか）としても興味が持てたのですが、算数で習った以上のレベル、微分とか積分とか行列式とかが実際の生活の何の役に立つというのでしょう。いや、実際にはあとになって役立つ分野があることを知るのですが、そのときにはもう手遅れで数学の苦手意識が邪魔をしてそういう分野にもまた興味が持てませんでした。</p>
<p class="in">最後に、数学というものは興味がない状態で扱うには複雑すぎるのでしょう。学生時代には古文の授業も役に立ちそうもないという理由で同様に興味は持てませんでしたが、それでも成績は数学よりはずいぶんマシだったように思います。</p>
<p class="ih">「そんなに数学苦手でプログラマーとしてやっていけるの?」とよく聞かれます。でも、大丈夫です。ご心配なく。</p>
<p class="in">もちろんプログラミングの中にも数学がどうしても必要な分野はあります。そういう分野で私がちゃんとやっていけるとは思えません。しかし、幸いなことにコンピュータ業界でそういう分野はそれほど多くありません。それよりもプログラミングではむしろ人間に関わることが多いのです。</p>
<p class="in">コンピュータはよく人間的でないと思われています。確かにコンピュータに人間性は期待できないのですが、プログラミングというものは、人間の意図をくんでコンピュータにわかる形で表現するという非常に人間的な活動です。必要なスキルは、開発しているこのプログラマーはいったい何を達成したいと思っているのかというような意図を読み取る能力とか、このプログラムの挙動をあいまいさなく表現するといった、学校の科目でいえば国語が相当するようなものが主流です。</p>
<p class="in">プログラミングを学ぶ一番の方法は他の人が書いたプログラムを読むことですが、それには数学の能力というよりは、やはり読解力などの国語的能力が活躍するような気がします。</p>
<p class="in">私の専門であるプログラミング言語の設計については、特にそのことがいえます。この機能を使ってプログラムを書くとプログラマーはどう感じるだろうかという想像力や、人間の脳が扱いやすい複雑さとそうでない複雑さを判別するなど、プログラミング言語の設計というものは、基本的にコンピュータよりも人間のほうを向いた活動なのです。</p>
<p class="in">ですから、世の中の数学苦手の諸君、プログラミングをあきらめることはありません。あなたたちには明るい未来が待っています。</p>
<p class="in">でもね、数学の能力はいらなくても国語力やその基礎になる考える能力はやっぱり必要なんですよね。肉体労働の対極にあるプログラミングという活動では、数学の能力ではないにしても、脳を活動させる能力はいずれにしても要求されそうです。</p>
<p class="in">もっとも、プログラミング自身が脳を鍛える体操といえないことはないですね。これからの高齢化社会にはボケ防止にデバッグとかが流行るかもしれません。</p>
</section>
<!-- Navigation -->
<br /><br />
<hr />
<p class="navigation-right"><a href="p-053.xhtml">&lt;&lt; 前ページ</a>　<a href="p-055.xhtml">次ページ &gt;&gt;</a></p>
</body>
</html>
