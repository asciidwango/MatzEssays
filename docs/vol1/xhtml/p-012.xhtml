<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
 xmlns="http://www.w3.org/1999/xhtml"
 xmlns:epub="http://www.idpf.org/2007/ops"
 xml:lang="ja"
 class="hltr"
>
<head>
<meta charset="UTF-8"/>
<title>第7章 条件判断とループ</title>
<link rel="stylesheet" type="text/css" href="../../style/book-style.css"/>
</head>
<body epub:type="bodymatter">
<!-- Navigation -->
<h1>Matz Essays Volume 1</h1>
<p class="navigation-top"><a href="../../index.xhtml">HOME</a>　&gt;　<a href="../index.xhtml">Volume 1</a>　&gt;　<a href="p-010.xhtml">第7章</a>　&gt;　Ruby開発日記</p>
<!-- Body -->
<section id="chap0712" class="level2">
<a id="page_092"/>
<h3>◆ Ruby開発日記 ◆ Linux Conference 2001</h3>
<hr class="hr-green" />
<p class="in">9月26日から9月28日まで、東京の明治記念館においてLinux Conference 2001が開催されました。例年、Linux Conferenceはプログラム委員から講師候補に直接コンタクトがあったのですが、今年はCall for Paper（論文応募）方式に変更されました。正直、論文を用意するのも大変なので、今年は発表しないつもりでいたのですが、広島市立大の木山さんが応募した論文が2本も通ったので、セッションを1つ作るために「埋め草」として話しませんか、と誘われたので引き受けることにしました。頼まれるとなかなかイヤとはいえないのです。</p>
<p class="in">ということで、スピーカー特権で、26日から参加してきました。プログラムは、</p>
<ul class="none">
<li><p><span class="link">http://lc.linux.or.jp/</span></p></li>
</ul>
<p class="ni">から参照できます。</p>
<p class="in">26日には、『Rubyを256倍使うための本 無道編』の著者である青木峰郎さんによるチュートリアル『Ruby活用〜オブジェクトは恐くない』に参加しました。青木さんのチュートリアルは、オブジェクト指向設計に注目して、いかに共有を推し進めるか、いかに「よい」プログラムを書くかということについて解説がありました。発表資料は、</p>
<ul class="none">
<li><p><span class="link">http://www.loveruby.net/~aamine/ja/lc2001/</span></p></li>
</ul>
<p class="ni">から入手できます。とはいえ、青木さんはこの手の発表は初めてだったようで、かなり緊張していました。『無道編』や『紅玉制覇編』でのなめらかな語り口は聞かれませんでした。ちょっと残念。また、チュートリアルでは実際に段階的に「よい」プログラムを開発していくという形式だったのですが、「よい」プログラムになっているはずなのに、なんとなくだんだん複雑になっていくという皮肉な現象も観測されました。</p>
<p class="in">27日午後には「プラットフォーム: Ruby」と名付けられたRuby関連セッションが開催されました。内容は木山さんによる「オブジェクト指向スクリプト言語Rubyへの世代別ごみ集め実装手法の改良とその評価」、木山さんと同じ大学の佐原大輔さんによる「RubyのVMに向けて」、それから私による「Rubyの心理学」の3つの発表が行われました。</p>
<p class="in">木山さんの世代別GC（ガベージコレクション）の実装については、その基本的実装について昨年11月のLinux Confereneでも発表されましたし、私は実際に一緒に開発も行いましたので、私にとっては耳新しいものではありませんでしたが、GCとは何か、というところから始まって、世代別手法がどのような仕組みで効率を改善するのかという点と、また実際にどの程度の改善が行われるかについて、よくまとまった発表でした。実際に全体の実行時間が39.3%、GC実行時間が88.7%も削減したという話でした。</p>
<a id="page_093"/>
<p class="in">もちろんすべてのケースでここまで高速化されるわけではないのですが、GCの実行速度は普段はあまり問題にならず、問題になるような場合というのは大量のオブジェクトを取り扱うケースで、そのような局面において世代別GCが有効であること、また、今年に入ってからの改善でさらに高速化されたことが示されました。</p>
<p class="in">ただ、木山さんにとって気になる点がいくつか残っているそうで、今のRubyに取り込むよりも、将来のVMバージョンに組み込んだほうがよいのではないかと言っていました。</p>
<p class="in">佐原さんのVMの実装の話はなかなか興味深いものでした。VMというのは仮想機械（Virtual Machine）の略で、プログラムを仮想的なCPUの機械語（よくバイトコードと呼ばれます）に変換して、実行しようとするものです。また、この仮想的なCPUのエミュレータのことをVMと呼びます。</p>
<p class="in">私はこの実装については何もタッチしていません。まだプロトタイプレベルで、Rubyプログラムを直接実行するレベルには達していないとはいえ、独自にここまで開発を行う人が出てくるというだけも、私にとっては驚異です。実際、Rubyは処理系開発者よりも、プログラマーに対して優しいように設計されているので、処理系を開発するのは結構大変なのです。</p>
<p class="in">さて、今回実装されたVMは、まだ構文解析を行うパーサーはなくて、アセンブラしか解釈できないうえに、クラスライブラリも数値しかないのだそうですが、それでもフィボナッチ関数（fib）や竹内関数（tak）の実行は、現在のRubyと比較して3倍近く高速化されるのだそうです。</p>
<p class="in">また、目標は現状よりも10倍速い処理系を実装することだそうです。本人も難しいだろうとは自覚しているようですが。</p>
<p class="in">Ruby実装者の立場から聞くと、静的言語向けのVMであるJava VMをベースに設計したのはどうだろうか、とかいろいろ疑問があるにはあるのですが、なかなか頼もしい発表でした。</p>
<p class="in">私のものは前2つと比較すると恥ずかしいくらい不真面目な内容でした。要するにRubyってのはどういうふうに人間向けにデザインされているかとかいうような内容です。簡単にまとめると、プログラミング言語は実はマン・マシン・インターフェイスであり、ヒューマンインターフェイスの原則が適用されるということと、そしてその結果、言語設計は人間に注目して行われるべきことを紹介したつもりです。</p>
<p class="in">私の発表資料は、</p>
<ul class="none">
<li><p><span class="link">http://www.ruby-lang.org/ja/lc2001/</span></p></li>
</ul>
<p class="ni">で公開しています。</p>
<p class="in">セッション終了後、明治記念館の一室を借りて、Ruby BOFが開かれました。BOF とはBird Of a Featherの略で、1つのことに興味がある人が集まってワイワイやる集会のことです。今回も日本にはRubyユーザーグループがない話から、VMの実装の話まで多岐にわたって話が制限時間いっぱいまで行われました。</p>
<p class="in">28日にもライトニングトークを始めとして、Rubyの話がいくつかあったようなのですが、この日は娘の誕生日なのであきらめて帰りました。家族からこれ以上不評を買ってもいけませんから。</p>
</section>
<!-- Navigation -->
<br /><br />
<hr />
<p class="navigation-right"><a href="p-011.xhtml">&lt;&lt; 前ページ</a>　<a href="p-013.xhtml">次ページ &gt;&gt;</a></p>
</body>
</html>
