<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
 xmlns="http://www.w3.org/1999/xhtml"
 xmlns:epub="http://www.idpf.org/2007/ops"
 xml:lang="ja"
 class="hltr"
>
<head>
<meta charset="UTF-8"/>
<title>第62章 若人への手紙</title>
<link rel="stylesheet" type="text/css" href="../../style/book-style.css"/>
</head>
<body epub:type="bodymatter">
<!-- Navigation -->
<h1>Matz Essays Volume 2</h1>
<p class="navigation-top"><a href="../../index.xhtml">HOME</a>　&gt;　<a href="../index.xhtml">Volume 2</a>　&gt;　第62章</p>
<!-- Body -->
<section id="chap62" class="level1">
<a id="page_263"/>
<span class="chap-title">Matz Essay</span><span class="chap-num">62</span>
<hr class="chap-hr" />
<h2>
<span class="fontsmall">まつもと ゆきひろのハッカーズライフ</span><br />
若人への手紙
</h2>
<hr class="chap-hr" />
<p class="right">[<span class="it">オープンソースマガジン</span>, 2006年6月号]</p>
<div class="newlead">
<p class="in">当時の中学生からいただいたお手紙への返事。もちろん、雑誌の記事にするだけでなく、返答部分は本人にも直接送っています。しかし、2006年に15歳ということは、（2024年）現在すでに32歳ということになりますね。改めて時間のすぎることの早さを実感します。</p>
<p class="in">さて、返事の中では静的型言語、動的型言語、関数型言語（Lispを関数型言語と呼ぶのは若干の抵抗がありますが）の3つを学ぶことを勧めています。現在であれば第1グループはC, C++, Rust, Go, 第2グループはJavaScript, Python, Ruby, 第3グループはHaskell, OCamlくらいでしょうか。言語のレパートリーは若干変化しても、本質的な部分はあまり変わっていないようです。</p>
</div>
<section id="chap6201" class="level2">
<h3>後輩からの手紙</h3>
<hr class="hr-gray" />
<p class="in">先日、見ず知らずの方からメールをいただきました。プログラマーの後輩として、どのようにプログラミングを学べばよいか尋ねる内容です。以下、引用します。</p>
<div class="column">
<p class="in">はじめまして。</p>
<p class="in">僕は、今15歳です。</p>
<p class="in">僕は、コンピュータにとても興味があり、近い将来、ITに関わる仕事がしたく、まつもとさんのような超優秀なプログラマーになりたいと思っています。そこで、いまからITについて猛勉強しようと、いろんなウェブサイトを見て回りましたが、何しろ情報量が非常に多く、かえって混乱してしまいました。そこで、ご質問なんですが、具体的にどのようなことから勉強を始めればいいですか。それから、入門に適切な書籍やウェブサイトなども紹介していただければ幸いです。</p>
<p class="in">お忙しいでしょうが、お返事をお待ちしております。</p>
</div>
<a id="page_264"/>
<p class="in">私ごときが「超優秀なプログラマー」と呼ばれるのは気恥ずかしいのですが、若い人がプログラミングに対して真剣に向き合おうという姿勢はとても頼もしく感じました。</p>
</section>
<section id="chap6202" class="level2">
<h3>昔の記憶</h3>
<hr class="hr-gray" />
<p class="in">考えてみると、私の若い頃と現在の若者とでは周囲の状況がまったく違います。私は、ちょうど彼と同じ頃にプログラミングを始めましたが、そのときに使っていたのはシャープのポケコン<a href="#fn1" class="footnote-ref" id="fnref1" epub:type="noteref" role="doc-noteref">1</a> で、400ステップのBASICプログラムを実行するのがやっとでした。あの頃はインターネットというものはありませんから、情報の入手先も主に雑誌と書籍だけです。雑誌に載っているプログラムリストを必死に入力して、動かしては悦に入っていたことを覚えています。主にゲームでしたが、文字がピコピコ動く程度のかわいいものでした。</p>
<p class="in">それに比べると、今の若い人たちは大変恵まれた環境にいます。世間にはコンピュータがあふれていますし、情報はインターネットからいくらでも入手できます。また、ゲームは昔に比べると超高速のマシン上ですばらしい品質のものが遊べるようになりました。しかし、プログラミングに興味がある人は以前よりも減ってしまったようです。現代ではIT技術が進歩しすぎて、コンピュータを使うことと、プログラミングが分離してしまっているのかもしれません。</p>
<p class="in">傑作SF作品である『宇宙船ビーグル号の冒険』<a href="#fn2" class="footnote-ref" id="fnref2" epub:type="noteref" role="doc-noteref">2</a> の1エピソードでは、非常に優れた文明が、衛星も近くの惑星もないため、段階的に発展できず、恒星間航行の技術を発明することなく滅んでしまいます。コンピュータの発達期に少年であった私たちは、自分自身の成長に応じてコンピュータが発展してきました。しかし、今の若者が「ファイナルファンタジー」を見て自分で作ろうと思っても、実現させるのはほとんど不可能<a href="#fn3" class="footnote-ref" id="fnref3" epub:type="noteref" role="doc-noteref">3</a> ではないでしょうか。</p>
</section>
<section id="chap6203" class="level2">
<h3>先輩からの返事</h3>
<hr class="hr-gray" />
<p class="in">現代において、コンピュータ好きのうち、プログラミングに興味を持つ人の割合は確かに下がっています。ただ、決していなくなったわけではありません。そして、その中にはインターネットからの情報とオープンソースの力を借りて、まさに超優秀なプログラマーが育っています。</p>
<p class="in">たとえば、Haskell<a href="#fn4" class="footnote-ref" id="fnref4" epub:type="noteref" role="doc-noteref">4</a> を使ってPerl 6コンパイラの基礎を2週間で作ってしまったAudrey Tangは、そのとき20歳になったばかりでしたし、その他にも10代や20代前半で大きな成果を上げる若者もそれなりにいます。15歳でコンピュータとプログラミングに興味を持ち、優秀なプログラマーになりたいと考える彼も、将来大変有望なのではないでしょうか。</p>
<a id="page_265"/>
<p class="in">そう思って、以下のような返事を書きました。</p>
<div class="column">
<p class="in">お若いのにご自分の将来について真剣に考えていらっしゃることを大変うれしく思っています。</p>
<p class="in">さて、どのようなことから勉強を始めればよいかという質問ですが、これは大変答えにくいものです。というのは、何が効果的かは人によって違うからです。同じ本を読んで感動する人もいれば、全然何も感じない人もいます。コンピュータの勉強も似たようなものだと思います。</p>
<p class="in">しかし、私がプログラミングを始めたのも15歳くらいでしたし、自分の若いころを振り返って役に立ちそうなことをいくつかあげておきましょう。</p>
<p class="in">まず、コンピュータを使うこととプログラミングすることはまったく違うということをしっかり認識してください。昔、そう20年くらい昔にはこの2つはあまり区別されていませんでしたが、いまでは全然違います。ソフトウェアを使うのもまあ重要なことですが、プログラミングによってコンピュータに新しい仕事を教えこむことはそれ以上にエキサイティングで楽しいことです。</p>
<p class="in">次に、プログラミング言語について学んでください。それもできれば複数。プログラミングは言語を駆使して行います。言語を知らなければプログラミングはできません。そして、プログラムを作るのにどのプログラミング言語を使うかで、プログラマーの思考は影響を受けます。ですから、1つだけの言語では考え方が偏ってしまいます。C, C++, Javaのような言語と、RubyやPythonのような言語、それからLisp, ML , Haskellのような言語の3種類からそれぞれ自分に向いていそうなものを学ぶといいと思います。プログラミングは手段であって目的ではないことに気を付けてください。つまり、プログラミングは（わかる人にとっては）とても楽しい行為ですが、それでも「完成したプログラムで何を実現するか」ということが最も重要なことで、それがなければプログラミングそのものにはたいして意味はなくなってしまいます。自分がどんな分野に興味があるのか、プログラムを作ることによってどんなことがしたいのか、そのことがわかれば能力を伸ばすことができると思います。私の知っている優秀なプログラマーは、みんな「自分が何を好きで、何がやりたいのか」をはっきり知っています。私自身はプログラミング言語にとても興味があり、いつか自分の言語を作ろうと心に思ったのは高校生のころでした。そのような気持ち（熱意）の継続により、大学に入り、就職し、Rubyを作り、世間から「優秀なプログラマー」と見なされるようになったわけです。自分から見れば、実際に優秀かどうかはやや疑問符が付きますが。いずれにしても、プログラミング言語を作りたいと思ってから実際にRubyを作るまでには10年以上かかっていますから、その間「作りたい」という気持ちを維持できたことが成功の1つの原因ではないかと思います。</p>
<p class="in">自分が何に興味があるのかある程度認識できたら、その分野を中心にほかの人の書いたプログラムを読むのがよいのではないかと思います。書籍に載っているサンプルプログラムや、オープンソースソフトウェアのソースコードなど読むことのできるプログラムはたくさんあります。ただ、漠然と読むのは難しいですし、興味を維持することができませんから、知りたいことを調べるために読むという目的意識が必要でしょう。</p>
<p class="in">私の若いころには思いどおりに使えるコンピュータなど個人レベルで買えるものではありませんから、中学生、高校生のころは本ばかり読んでいました。Pascalの本、Lispの本、人工知能の本など。ちゃんとプログラムを書き出したのは大学に入ってからです。それでも基本的な知識はあったので別に困りはしませんでした。</p>
<a id="page_266"/>
<p class="in">さて、年寄りの話はここまでです。パーソナルコンピュータが普及し、インターネットが当たり前になった時代に生きるいまの若い人は、また違った形でプログラミングを身につけるのではないかと思います。しかし、時代が変わっても、熱意とか継続とかは変わらない原則ではないかと思います。ご自分がなぜコンピュータに興味を持つようになって、本当はどんなことをしたいのか、ちょっと考えてみてはいかがでしょう。</p>
</div>
<p class="in">このような若者がいる限り、「未来は明るい」と信じたい今日このごろです。</p>
</section>
</section>
<section id="footnotes" class="footnotes footnotes-end-of-document" epub:type="footnotes">
<hr />
<ol>
<li epub:type="footnote" id="fn1">
<p><span class="k">シャープのポケコン</span></p>
<p>シャープ製ポケットコンピュータ「PC-1210」。1980年に発売された、シャープ製BASIC内蔵ポケットコンピュータの第1号。これでプログラミングにはまった業界人は多いと聞く。
<a href="#fnref1" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn2">
<p><span class="k">『宇宙船ビーグル号の冒険』</span></p>
<p>A・E・ヴァン・ヴォークト著/沼沢洽治訳、「宇宙船ビーグル号の冒険」、東京創元社、ISBN4-488-60901-5。
<a href="#fnref2" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn3">
<p><span class="k">実現させるのはほとんど不可能</span></p>
<p>しかし、技術の進歩によってフルCGアニメをほぼ一人で作成した「ほしのこえ」（制作: 新海誠）や「惑星大怪獣ネガドン」（監督: 粟津順）のような例もあるので油断はできない。
<a href="#fnref3" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
<li epub:type="footnote" id="fn4">
<p><span class="k">Haskell</span></p>
<p>プログラミング言語の研究を行うための共通の基盤を築くことを目的とし、近年定説となりつつあるプログラミング言語理論を集大成して作られた非正格純粋関数型言語。
<a href="#fnref4" class="footnote-back" role="doc-backlink">↑</a></p>
</li>
</ol>
</section>
<!-- Navigation -->
<br /><br />
<hr />
<p class="navigation-right"><a href="p-050.xhtml">&lt;&lt; 前ページ</a>　<a href="p-052.xhtml">次ページ &gt;&gt;</a></p>
</body>
</html>
