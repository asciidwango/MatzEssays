<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html
 xmlns="http://www.w3.org/1999/xhtml"
 xmlns:epub="http://www.idpf.org/2007/ops"
 xml:lang="ja"
 class="hltr"
>
<head>
<meta charset="UTF-8"/>
<title>第51章 Emacs 対 vi</title>
<link rel="stylesheet" type="text/css" href="../../style/book-style.css"/>
</head>
<body epub:type="bodymatter">
<!-- Navigation -->
<h1>Matz Essays Volume 2</h1>
<p class="navigation-top"><a href="../../index.xhtml">HOME</a>　&gt;　<a href="../index.xhtml">Volume 2</a>　&gt;　第51章</p>
<!-- Body -->
<section id="chap51" class="level1">
<a id="page_207"/>
<span class="chap-title">Matz Essay</span><span class="chap-num">51</span>
<hr class="chap-hr" />
<h2>
オープンソース開発って何だろう
</h2>
<hr class="chap-hr" />
<p class="right">[<span class="it">Linuxソフトウェアアンテナ</span>, 2005年7月号]</p>
<div class="newlead">
<p class="in">技術評論社のムック『Linuxソフトアンテナ』オープンソース特集の一部となる記事です。オープンソースの定義からその精神、メリットなどについて記述しています。</p>
<p class="in">注目すべきは、オープンソース開発者のさまざまな具体例をあげているところです。これらの開発者は当時の個人的な知人の経験に基づいて記述されています。いずれも具体的なモデルがいるか、あるいは複数の実在人物の経験を組み合わせたものです。最後例6「マツモトユキヒロさん」は誰だかはっきりわかりますね。他にも例1は学生時代の私、例2はRubyを作る前の私、例3は同僚複数の経験の組み合わせ、例4はネットワーク応用通信研究所社長（当時）の井上浩氏、例5はRubyコミッターの中田さんがモデルです。</p>
</div>
<p class="ih">「オープンソース開発」とは、簡単にいうと「オープンソースのやり方にしたがったソフトウェア開発」です。しかし、その一言で終わってしまうにはあまりにも深い意味を持つ言葉でもあります。</p>
<section id="chap5101" class="level2">
<h3>「オープンソース」の定義</h3>
<hr class="hr-gray" />
<p class="in">まず、「オープンソース」という言葉の定義から見てみましょう。オープンソースと聞くと、「ソースがオープン」だからソースコードが一般に公開されていればそれでいいんでしょ、と考えてしまいがちですが、そもそも「オープンソース」という言葉は世に出たその瞬間から明確な定義をもって誕生した言葉なのです。OSI（Open Source Initiative）によればオープンソースの定義は次に示すとおりです。この原文は<span class="link">http://www.opensource.jp/osd/osd-japanese.html</span>で入手可能です。</p>
<a id="page_208"/>
<div class="column">
<p class="column-title">オープンソースの定義</p>
<p class="ni">オープンソースの定義</p>
<p class="ni">八田 真行訳、2004年2月21日</p>
<p><br /></p>
<p class="ih">「オープンソース」とは、単にソースコードが入手できるということだけを意味するのではありません。「オープンソース」であるプログラムの頒布条件は、以下の基準を満たしていなければなりません。</p>
<p class="ni">1. 再頒布の自由</p>
<p class="ih">「オープンソース」であるライセンス（以下「ライセンス」と略）は、出自の様々なプログラムを集めたソフトウェア頒布物（ディストリビューション）の一部として、ソフトウェアを販売あるいは無料で頒布することを制限してはなりません。ライセンスは、このような販売に関して印税その他の報酬を要求してはなりません。</p>
<p class="ni">2. ソースコード</p>
<p class="ih">「オープンソース」であるプログラムはソースコードを含んでいなければならず、コンパイル済形式と同様にソースコードでの頒布も許可されていなければなりません。何らかの事情でソースコードと共に頒布しない場合には、ソースコードを複製に要するコストとして妥当な額程度の費用で入手できる方法を用意し、それをはっきりと公表しなければなりません。方法として好ましいのはインターネットを通じての無料ダウンロードです。ソースコードは、プログラマーがプログラムを変更しやすい形態でなければなりません。意図的にソースコードをわかりにくくすることは許されませんし、プリプロセッサや変換プログラムの出力のような中間形式は認められません。</p>
<p class="ni">3. 派生ソフトウェア</p>
<p class="in">ライセンスは、ソフトウェアの変更と派生ソフトウェアの作成、並びに派生ソフトウェアを元のソフトウェアと同じライセンスの下で頒布することを許可しなければなりません。</p>
<p class="ni">4. 作者のソースコードの完全性（integrity）</p>
<p class="in">バイナリ構築の際にプログラムを変更するため、ソースコードと一緒に「パッチファイル」を頒布することを認める場合に限り、ライセンスによって変更されたソースコードの頒布を制限することができます。ライセンスは、変更されたソースコードから構築されたソフトウェアの頒布を明確に許可していなければなりませんが、派生ソフトウェアに元のソフトウェアとは異なる名前やバージョン番号をつけるよう義務付けるのはかまいません。</p>
<p class="ni">5. 個人やグループに対する差別の禁止</p>
<p class="in">ライセンスは特定の個人やグループを差別してはなりません。</p>
<p class="ni">6. 利用する分野（fields of endeavor）に対する差別の禁止</p>
<p class="in">ライセンスはある特定の分野でプログラムを使うことを制限してはなりません。例えば、プログラムの企業での使用や、遺伝子研究の分野での使用を制限してはなりません。</p>
<p class="ni">7. ライセンスの分配（distribution）</p>
<p class="in">プログラムに付随する権利はそのプログラムが再頒布された者すべてに等しく認められなければならず、彼らが何らかの追加的ライセンスに同意することを必要としてはなりません。</p>
<a id="page_209"/>
<p class="ni">8. 特定製品でのみ有効なライセンスの禁止</p>
<p class="in">プログラムに付与された権利は、それがある特定のソフトウェア頒布物の一部であるということに依存するものであってはなりません。プログラムをその頒布物から取り出したとしても、そのプログラム自身のライセンスの範囲内で使用あるいは頒布される限り、プログラムが再頒布されるすべての人々が、元のソフトウェア頒布物において与えられていた権利と同等の権利を有することを保証しなければなりません。</p>
<p class="ni">9. 他のソフトウェアを制限するライセンスの禁止</p>
<p class="in">ライセンスはそのソフトウェアと共に頒布される他のソフトウェアに制限を設けてはなりません。例えば、ライセンスは同じ媒体で頒布される他のプログラムがすべてオープンソースソフトウェアであることを要求してはなりません。</p>
<p class="ni">10. ライセンスは技術中立的でなければならない</p>
<p class="in">ライセンス中に、特定の技術やインターフェースの様式に強く依存するような規定があってはなりません。</p>
</div>
<p class="in">1998年初頭、マイクロソフトとの競争に敗れつつあったネットスケープ社は起死回生のウラ技として、1つの大胆な戦略を立てました。それは自社の主力製品であるNetscape Navigatorの新バージョンをフリーソフトウェアとして公開し、コミュニティの力で成長させようというものです。しかし、フリーソフトウェアの「フリー」という言葉が「自由」よりも「無料」を想起させるのが悩みの種でした。ライバルのInternet Explorerも無料ですから、マーケティング戦略的にはもっと差別化できる用語が必要です。そこでネットスケープ社は論文『伽藍とバザール』で知られるEric Raymondに相談しました。1998年2月3日、Raymondは何人かの「フリーソフトウェアビジネスの有名人」と会議を開き、その会議の最中に「オープンソース」という言葉が誕生したのでした。同じ月のうちにBruce PerensがまとめていたDebian Freesoftware Guidelineをベースにして上記のオープンソースの定義（の最初のバージョン）が策定されました。1998年2月23日にネットスケープ社は自社のブラウザのソース公開を行うというアナウンスを行い、これが「オープンソース」という言葉が広く使われるようになった最初です。</p>
<p class="in">オープンソースの定義と用語の歴史的経緯を考えると、以下のことがいえると思います。</p>
<div class="description">
<p class="ditem">オープンソースはライセンスのあり方の定義である</p>
<p class="dni">オープンソースの定義には個別のソフトウェアの性質について何も語っていません。定義されているのはそのは頒布条件とライセンスだけです。オープンソースという考え方が注目しているのは、「どんなソフトウェアか」ではなく「ソフトウェアをどう扱えるか」であるということです。</p>
<p class="ditem">オープンソースはマーケティング用語である</p>
<p class="dni">オープンソースという用語はビジネスを強く意識しています。1980年代以降長く使われてきたフリーソフトウェアという用語を使わずあえて新しい用語を作ったのは、「無料」との混同を嫌ったこともありますが、効果的なマーケティングに新語が効果的であることも理由でしょう。</p>
</div>
<p class="in">自由を守るとことを目的とするフリーソフトウェアと比較すると、オープンソースはずいぶん実利主義に見えます。実際、オープンソースという言葉がなければ、現在のようにソースが公開されていて自由に利用できるソフトウェアは広まらなかったと思います。</p>
</section>
<section id="chap5102" class="level2">
<a id="page_210"/>
<h3>オープンソースでできること</h3>
<hr class="hr-gray" />
<p class="in">先ほど、オープンソースはソース公開ではない、と述べました。オープンソースの定義によればオープンソースであることとは、ただ単にソースコードが入手できることではなく、入手したソースコードをどのように取り扱うことが許されるべきかについて明確な規定があります。これはいったいなぜなのでしょうか。オープンソースの定義の10ヶ条のような細かな「制約」がありながらなお「自由」というのはどういうことなのでしょうか。</p>
<p class="in">それは、一見制約に見える定義をゆるめると結局そのソフトウェアに対して「できること」が減ってしまうからです。オープンソースの定義を満たしている限り、ソフトウェアの利用者はそのソフトウェアに対して著作権者の許可をいちいち求めることなくどこまでのことができるのか明確です。たとえば、あるソフトウェアのライセンスに「利用は平和目的に限定される」という条項があったとしましょう。平和目的は立派な心がけでそれ自体に避難すべきところはありません。しかし、そのソフトウェアを含むディストリビューションは、受け取った人がそのソフトウェアを平和目的以外に用いないように確認する必要性が発生するかもしれません。そんなことが起きれば、ソフトウェアの利用に大きな制限がかかってしまうでしょう。そういうことを避けるため、そのようなライセンスはオープンソースの定義の第6項で禁止されています。面倒に見える決まりはみなソフトウェアを安心して利用するためにあるのです。</p>
<p class="in">あるソフトウェアのライセンスがオープンソースの定義を満たしているとわかれば、少なくとも以下のことを自由に行ってよいことがわかります。</p>
<ul>
<li><p>そのソフトウェアを再配布する</p></li>
<li><p>そのソフトウェアを改造する</p></li>
<li><p>改造したソフトウェアを配布する</p></li>
<li><p>そのソフトウェアをビジネスの一部に組み込む</p></li>
</ul>
<p class="in">これらのことは、開発者にとっては安心して開発に参加できることを意味します。いちどオープンソースソフトウェアとして公開されたものは、将来、主開発者に何かあって開発が中断されても、有志が開発を継続することができますから、消え去ってしまうことを心配する必要がありません。自分の労力が無駄にならないという安心感があります。</p>
<p class="in">継続の安心感は、ビジネスマンにとっても有効です。自分のシステムのコンポーネントとして組み込んだソフトウェアがベンダーの都合でサポートが中止される事態は、商用ソフトウェアにおいて珍しいことではありません。しかし、オープンソースソフトウェアならば、ソースコードが入手できているので、必要ならば必要なだけ自分でサポートを行うこともできます。</p>
<p class="in">ビジネスにとってのオープンソースのメリットは継続性だけではありません。最近はソフトウェア産業も成熟してきているので、新規参入者が既存のビッグプレイヤーを打ち負かすのは容易なことではありません。打ち負かすどころか生き残ることさえ難しいでしょう。生き残りに有効な方法は、既存のプレイヤーが採用していない新しいルールの下で勝負することです。この新しいルールとしてオープンソースが有望なのです。たとえばデータベースを考えてみましょう。商用データベースはOracleにしてもIBMのDB2にしても長い時間とたくさんのお金をかけて開発されてきたものです。これに勝つのは並たいていのことではありません。しかし、スウェーデンのMySQL ABという小さな会社は自社開発のデータベースエンジンをオープンソースソフトウェアとして公開することで、これらのビッグプレイヤーと対等に渡り合っています。</p>
<a id="page_211"/>
<p class="in">ソフトウェアビジネスにおいてソースコードを他人にあげてしまうことは許容できないと考える人は多くいます。しかし、考えてみればソースコードを<ruby>隠蔽<rt>いんぺい</rt></ruby>することによって稼げるお金はどんどん小さくなっています。現在のソフトウェア産業構造は、ソフトウェアパッケージが1割、自社向けシステムの開発が3割、受注システムが6割なんだそうです。今やソフトウェア産業のお金が動くところは、ソリューション構築やサービスの提供、そしてサポートなのです。ですから、コアコンポーネントのソースコードを無償で提供しても、それによって<ruby>儲<rt>もう</rt></ruby>ける手段はそれこそ山のようにあるわけです。いや、マイクロソフトほどはお金を生み出せないかもしれませんが。</p>
</section>
<section id="chap5103" class="level2">
<h3>オープンソース関係者の気持ち</h3>
<hr class="hr-gray" />
<p class="in">一言にオープンソースといっても、それに関わる人々の気持ちはそれぞれです。ここではオープンソースに関わる人々のさまざまな立場と気持ちを紹介します。なお、ここで紹介する人々は現実の人間をモデルにしていますが、あくまでもフィクションです。</p>
<div class="description">
<p class="ditem">例1: 学生</p>
<p class="dni">タナカ・カナタさん（22）は国立大学工学部の4年生です。最初は研究に利用するツールとしてオープンソースソフトウェアに出合いました。カナタさんはStallmanの唱えるソフトウェアの自由を信奉しており、ソフトウェアはできる限り自由であるべきであると信じています。ですから、彼の使うソフトウェアはすべてソースコードが入手できるオープンソースソフトウェアです。カナタさん自身はオープンソースソフトウェアと呼ぶよりもフリーソフトウェアと呼ぶ方を好みます。しかし、この世から「不自由なソフトウェア」を駆逐するべきだというほど過激な思想を持っているわけではありません。現在、カナタさんはオープンソースソフトウェアの主開発者として活躍しています。もともとはインターネットで他の人が作ったツールを改造していたのですが、変更点を還元しようと開発者にコンタクトしたら「もう使わなくなってしまったのでご自由にどうぞ」といわれてしまいました。そのままにするのももったいないので自分でメンテナンスすることにしました。メーリングリストには数十人のユーザーが集まっています。コミュニティの規模としては小さいですが、なごやかな雰囲気で活発に開発が行われています。カナタさんの開発はあくまでも趣味の領域で、本業の研究の合間を縫って行われています。</p>
<p class="ditem">例2: 職業プログラマー</p>
<p class="dni">シミズ・ヒロシさん（31）は職業プログラマーです。ヒロシさんはプログラマーとしての自分に箔を付けるために名刺の代わりになるソフトウェアがあればよいと感じてオープンソフトウェアの開発を行いました。自分の能力を見てもらうためにはソースコードも含めてすべて公開するオープンソースが最適だと考えたのです。ヒロシさんの試みは成功し、優秀なプログラマーとして見なされる機会が増えてきました。ヒロシさんは自分のソフトウェアをひっさげて最近転職を果たしました。勤務条件も向上しました。転職先の会社は一定の範囲内でオープンソースソフトウェアの開発を認めてくれています。最近では雑誌の記事を書くなどの副業収入も少し入ってくるようになりました。</p>
<a id="page_212"/>
<p class="ditem">例3: 若手SE</p>
<p class="dni">コダマ・マドカさん（25）は某ソフトハウスに勤める若手SEです。SEという肩書を持ってはいるものの、実際には顧客との交渉から設計、コーディングに至るまで何でもこなします。最近、マドカさんは上司から、業務で開発したプロダクトをオープンソース化するように命じられました。これまでマドカさんはPHPやMySQLなどオープンソースソフトウェアのユーザーだったわけですが、急に開発者として参加することになって戸惑っています。業務開発の世界とオープンソースの世界とではやり方がずいぶん違うようです。でも、業務としてオープンソースに関われることはもしかしたら幸せなことかもしれないと考え始めています。</p>
<p class="ditem">例4: オープンソース企業CEO</p>
<p class="dni">イノウエ・コウジさん（45）はソフトウェア系ベンチャー企業の社長です。コウジさんは8年前、仲間と一緒に起業しました。Linux系サーバーの構築とソフトウェア開発が主たる業務です。以前SEの経験もあるコウジさんはRubyなどを使ったソフトウェアの開発も行いますが、あくまでも趣味のレベルです。しかし、会社のコアとなる技術としてオープンソースは欠かせないと感じています。コウジさんの会社のように小さなソフトウェア企業が大企業と渡り合うためには、オープンソースが重要な武器になると考えているからです。コウジさんの会社のソフトウェア開発はほぼ例外なくオープンソースソフトウェアを利用して行われます。これにより、コストや開発期間で競争力を獲得しています。また、ブラックボックスがないので問題が発生したときにどこまでも対処可能であるという安心感も見逃せません。コウジさんはただ利用するだけでは差別化が十分ではないとして、積極的に自社開発ソフトウェアをオープンソース化したり、オープンソース開発者を雇用したりしています。おかげでオープンソース業界では知る人ぞ知る企業としてもポジションを獲得しつつあるようです。</p>
<p class="ditem">例5: フリープログラマー</p>
<p class="dni">ゴトウ・ユウゴさん（38）はフリープログラマーです。普段は派遣のプログラマーとして働いたり、知人から紹介してもらったソフトウェア開発を行っています。ユウゴさんのもう1つの顔はオープンソース開発者です。ユウゴさんはあるオープンソースソフトウェアの開発にも関わっています。ユウゴさんは主開発者ではありませんが、協力者として長らく開発に参加してきました。メーリングリストに報告されたバグをユウゴさんがいち早く修正したりすることは珍しくありません。主開発者からの信頼も厚く、ソースコードへのコミット権もいただいています。ユウゴさんが提案して採り入れられた機能も数多くあります。プログラミングが大好きなユウゴさんにとって、オープンソース開発への参加は最大の趣味と言ってもよいでしょう。ソフトウェアがオープンソースでなければユウゴさんは参加することはできなかったわけですから、ユウゴさんはオープンソースに感謝しています。</p>
<p class="ditem">例6: 職業オープンソース開発者</p>
<p class="dni">マツモト・ユキヒロさん（40）は某ソフトハウスに勤務するソフトウェア技術者です。ユキヒロさんはここ10年ほどあるオープンソースソフトウェアを開発しています。ユキヒロさんの開発したソフトウェアは日本のみならず世界中で使われています。ユキヒロさんはもともと副業としてオープンソースソフトウェアを開発していましたが、サポートなどに割かれる時間が本業に影響を与えているのが悩みでした。そこで、7年前オープンソースソフトウェアの開発者として現在の勤務先に転職しました。ユキヒロさんは技術コンサルタントや技術マネージャとしても働きつつ、多くの時間をオープンソースソフトウェアの開発に割いています。勤務先はユキヒロさんがオープンソース開発者として露出することで間接的に利益を上げているので、そのような時間の使い方を認めています。ユキヒロさんは開発だけでなく、各種イベントでのプレゼンテーションや雑誌記事の執筆なども積極的にこなしています。それらに割かれる時間が多すぎて開発時間が少なくなっているのが最近の悩みです。</p>
</div>
<a id="page_213"/>
<p class="in">ここであげたのは多種多様なオープンソース関係者のうちごく一部ですが、それでも参加する動機、時間の使い方、経済的事情などさまざまであることがうかがえると思います。あくまでも趣味で参加する人もいれば、逆に単に仕事として参加する人もいます。</p>
</section>
<section id="chap5104" class="level2">
<h3>まとめ</h3>
<hr class="hr-gray" />
<p class="in">オープンソースはソフトウェアを有効に利用する新しい手法です。これは単にソフトウェアのソースコードを公開するだけでなく、すべての人に一定の自由を保証するライセンスを含むよう明確に定義されています。オープンソースへの関わり方は多種多様ですが、いずれにしてもオープンソースが保証する自由が大きく影響を与えています。オープンソースに関わる人のほとんどは何らかの形でこの自由を利用しようとしています。利用の仕方は自分が自由を満喫するためだったり、ビジネス上で優位に立つためだったりしますが。</p>
</section>
</section>
<!-- Navigation -->
<br /><br />
<hr />
<p class="navigation-right"><a href="p-037.xhtml">&lt;&lt; 前ページ</a>　<a href="p-039.xhtml">次ページ &gt;&gt;</a></p>
</body>
</html>
